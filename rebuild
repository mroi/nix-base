#!/bin/sh -e

# find directory enclosing the script
self=$(
	test -d "$(dirname "$0")" && cd "$(dirname "$0")"
	test "$(dirname "$0")" = . && cd "$(dirname "$(command -v "$0")")"
	test -L "$(basename "$0")" && cd "$(dirname "$(readlink "$(basename "$0")")")"
	pwd
)

. "$self/modules/build/utils.sh"

machine=$(
	# shellcheck disable=SC3028
	if test "$HOSTNAME" ; then
		echo "$HOSTNAME"
	elif command -v scutil > /dev/null ; then
		scutil --get LocalHostName
	else
		hostname
	fi | tr '[:upper:]' '[:lower:]'
)
machine=${machine%.local}

# check if a configuration exists
if ! test -d "$self/machines/$machine" ; then
	printError "No configuration for this machine: $machine"
	exit 68  # EX_NOHOST
fi

# make sure Nix is installed
if ! nix --version > /dev/null 2>&1 ; then
	. "$self/modules/build/state.sh"
	. "$self/modules/nix/install.sh"
fi

# self-update flake
if checkArgs update-flake update all ; then
	trace nix flake update --flake "$self"
fi

# generate rebuild script for this machine
script=$(
	nix build --quiet --no-link --print-out-paths --no-warn-dirty \
		"${self}#baseConfigurations.${machine}.config.system.build.rebuild"
)

# default subcommand is ‘activate’
if test "$#" -eq 0 ; then set activate ; fi

# run rebuild script
export self _helpCommandsPrinted
exec "$script" "$@"
